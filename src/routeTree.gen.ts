/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthIndexRouteImport } from './routes/_auth.index'
import { Route as SignInSplatRouteImport } from './routes/sign-in.$'
import { Route as AuthSearchRouteImport } from './routes/_auth.search'

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const SignInSplatRoute = SignInSplatRouteImport.update({
  id: '/sign-in/$',
  path: '/sign-in/$',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSearchRoute = AuthSearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/search': typeof AuthSearchRoute
  '/sign-in/$': typeof SignInSplatRoute
  '/': typeof AuthIndexRoute
}
export interface FileRoutesByTo {
  '/search': typeof AuthSearchRoute
  '/sign-in/$': typeof SignInSplatRoute
  '/': typeof AuthIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/search': typeof AuthSearchRoute
  '/sign-in/$': typeof SignInSplatRoute
  '/_auth/': typeof AuthIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/search' | '/sign-in/$' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/search' | '/sign-in/$' | '/'
  id: '__root__' | '/_auth' | '/_auth/search' | '/sign-in/$' | '/_auth/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  SignInSplatRoute: typeof SignInSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/sign-in/$': {
      id: '/sign-in/$'
      path: '/sign-in/$'
      fullPath: '/sign-in/$'
      preLoaderRoute: typeof SignInSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/search': {
      id: '/_auth/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof AuthSearchRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthSearchRoute: typeof AuthSearchRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSearchRoute: AuthSearchRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  SignInSplatRoute: SignInSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
